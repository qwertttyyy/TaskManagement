openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/:
    get:
      operationId: api_tasks_list
      description: Возвращает список всех задач.
      summary: Получение всех задач
      parameters:
      - in: query
        name: created_date
        schema:
          type: string
        description: Фильтр по дате создания задачи
        examples:
          CreatedDateExample:
            value: '2024-03-21'
            summary: Пример значения для created_date
      - in: query
        name: status
        schema:
          type: string
          enum:
          - done
          - in_progress
          - new
        description: Фильтр по статусу задачи
      tags:
      - Задачи
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
              examples:
                ListTasksExample:
                  value:
                  - - id: 1
                      title: Задача 1
                      description: Описание задачи 1
                      status: new
                      created_date: '2023-01-01T00:00:00Z'
                      last_updated_date: '2023-01-01T00:00:00Z'
                      user:
                        id: 1
                        first_name: Иван
                        email: ivan@example.com
                    - id: 2
                      title: Задача 2
                      description: Описание задачи 2
                      status: in_progress
                      created_date: '2023-01-02T00:00:00Z'
                      last_updated_date: '2023-01-02T00:00:00Z'
                      user:
                        id: 2
                        first_name: Петр
                        email: petr@example.com
                  summary: Пример ответа на получение всех задач
          description: ''
    post:
      operationId: api_tasks_create
      description: Создает новую задачу с данными, предоставленными в запросе.
      summary: Создание задачи
      tags:
      - Задачи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
            examples:
              CreateTaskExample:
                value:
                  title: Новая задача
                  description: Описание новой задачи
                summary: Пример запроса на создание задачи
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                CreateTaskExample:
                  value:
                    id: 3
                    title: Новая задача
                    description: Описание новой задачи
                    status: new
                    created_date: '2023-01-03T00:00:00Z'
                    last_updated_date: '2023-01-03T00:00:00Z'
                    user:
                      id: 1
                      first_name: Иван
                      email: ivan@example.com
                  summary: Пример ответа на создание задачи
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: api_tasks_retrieve
      description: Возвращает задачу по переданному ID в параметре пути.
      summary: Получение конкретной задачи
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Уникальный идентификатор задачи
        required: true
      tags:
      - Задачи
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                RetrieveTaskExample:
                  value:
                    id: 1
                    title: Задача 1
                    description: Описание задачи 1
                    status: new
                    created_date: '2023-01-01T00:00:00Z'
                    last_updated_date: '2023-01-01T00:00:00Z'
                    user:
                      id: 1
                      first_name: Иван
                      email: ivan@example.com
                  summary: Пример ответа на получение конкретной задачи
          description: ''
    patch:
      operationId: api_tasks_partial_update
      description: Обновляет часть данных задачи с указанным ID.
      summary: Частичное обновление задачи
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Уникальный идентификатор задачи
        required: true
      tags:
      - Задачи
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTask'
            examples:
              PatchTaskExample:
                value:
                  status: in_progress
                summary: Пример запроса на частичное обновление задачи
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTask'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              examples:
                PatchTaskExample:
                  value:
                    id: 1
                    title: Задача 1
                    description: Описание задачи 1
                    status: in_progress
                    created_date: '2023-01-01T00:00:00Z'
                    last_updated_date: '2023-01-03T00:00:00Z'
                    user:
                      id: 1
                      first_name: Иван
                      email: ivan@example.com
                  summary: Пример ответа на частичное обновление задачи
          description: ''
    delete:
      operationId: api_tasks_destroy
      description: Удаляет задачу с указанным ID.
      summary: Удаление задачи
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: Уникальный идентификатор задачи
        required: true
      tags:
      - Задачи
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/users/auth/token/:
    post:
      operationId: api_users_auth_token_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/users/register/:
    post:
      operationId: api_users_register_create
      description: Создает нового пользователя с данными, предоставленными в запросе.
      summary: Регистрация нового пользователя
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples:
              CreateUserExample:
                value:
                  first_name: Иван
                  email: ivan@example.com
                  password: securepassword123
                summary: Пример запроса на регистрацию пользователя
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                CreateUserExample:
                  value:
                    id: 1
                    first_name: Иван
                    email: ivan@example.com
                  summary: Пример ответа на регистрацию пользователя
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    PatchedTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 30
        description:
          type: string
          title: Описание
          maxLength: 300
        created_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        last_updated_date:
          type: string
          format: date-time
          nullable: true
          title: Дата последнего обновления
    StatusEnum:
      enum:
      - new
      - in_progress
      - done
      type: string
      description: |-
        * `new` - Новая
        * `in_progress` - В процессе
        * `done` - Выполнена
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        title:
          type: string
          title: Название
          maxLength: 30
        description:
          type: string
          title: Описание
          maxLength: 300
        created_date:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        last_updated_date:
          type: string
          format: date-time
          nullable: true
          title: Дата последнего обновления
      required:
      - created_date
      - description
      - id
      - title
      - user
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
      required:
      - email
      - first_name
      - id
      - password
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
